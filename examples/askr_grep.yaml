#!/usr/bin/env askr
#
#  Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE
#  file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this
#  file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
#  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
#  specific language governing permissions and limitations under the License.
#
#
# The order of the sections does not matter, but evaluation always happens in a pipline ordering:
#
#    input -> filter(s) -> output
#
# The options section is optional
#
options:
  # This scripts takes only one additional command line option, but there can be any number of them
  - name: selKeys
    description: "selects the keys for the result output"
    argument: required
    short: -s
    long: --select
input:
  # The input plugins, which reads the file(s) given
  - plugin: csv_reader.so
    source: files
    configs:
      col-separator:
        - "\t"
      keyval-separator:
        - "="
      rec-separator:
        - "\n"
filter:
  # Assures that lines from multiple files shows up in chronologic order after filtering
  - plugin: ordered.so
    order:
      type: float
      key: time
  - plugin: pcre2.so
    configs:
      enable: expression
      logic: or
  - plugin: selector.so
    # Selects which keys to output, without this filter we would show all key=value pairs that passed.
    # This also dictates the ordering, such that the output is always consistent regardless of input.
    configs:
      option: selKeys
output:
  # Plugins that present the results (after filtering)
  - plugin: text.so
    configs:
      format: "$(key)=$(value)"
      col-separator: "\t"
      rec-separator: "\n"
