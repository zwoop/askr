/**
 * @file
 * @brief A simple Jenkins pipeline, to do the builds for one platform. We use the name of the Jenkins job to
 *        dentify node platform. Note: This is not useful for running on Docker images use the docker.jdp file
 *        for such Jenkins jobs.
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE
 * file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this
 * file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

def job_elems = "${env.JOB_NAME}".split('-')
def ats_branch = job_elems[1]
def node_name = "macOS"

if (job_elems.length == 4) {
    node_name = job_elems[2] + job_elems[3]
} else {
    node_name = job_elems[2]
}

node(node_name) {
    checkout scm

    stage("configure") {
        sh """
        autoreconf -if
        ./configure --enable-ccache
        """
    }

    stage("build") {
        sh """
        if [ "aarch64" = "`uname -m`" ]; then
            make -j2
        else
            make -j4
        fi
        """
    }

    stage("test") {
        sh """
        make test
        make distclean
        """
    }
}
